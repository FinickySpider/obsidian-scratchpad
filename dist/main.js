/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var C=(c,o)=>{for(var t in o)w(c,t,{get:o[t],enumerable:!0})},E=(c,o,t,e)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of m(o))!y.call(c,s)&&s!==t&&w(c,s,{get:()=>o[s],enumerable:!(e=x(o,s))||e.enumerable});return c};var T=c=>E(w({},"__esModule",{value:!0}),c);var D={};C(D,{default:()=>g});module.exports=T(D);var h=require("obsidian");var n=require("obsidian"),u="scratchpad-enhanced-view",p=class extends n.ItemView{constructor(t,e){super(t);this.textHistory=[];this.textIndex=-1;this.isTyping=!1;this.isDrawerOpen=!1;this.currentStash=null;this.loadedStashes=[];this.stashOffset=0;this.isLoadingStashes=!1;this.plugin=e}getViewType(){return u}getDisplayText(){return"Scratchpad"}getIcon(){return"edit-3"}async onOpen(){this.contentEl.empty(),this.contentEl.addClass("scratchpad-container"),this.setupHeader(),this.setupTextarea(),this.setupActionButtons(),this.setupStashDrawer(),this.scope=new n.Scope(this.app.scope),await this.loadContentFromPlugin(),this.textHistory.length===0&&this.saveTextSnapshot(),this.scope.register(["Mod"],"z",t=>this.handleUndo(t)),this.scope.register(["Mod","Shift"],"z",t=>this.handleRedo(t)),this.scope.register(["Mod"],"y",t=>this.handleRedo(t)),this.scope.register(["Mod"],"s",t=>{t.preventDefault(),this.saveContentToPlugin()})}setupHeader(){let t=this.contentEl.createEl("div",{cls:"scratchpad-header"}),e=t.createEl("button",{cls:"scratchpad-drawer-button",attr:{"aria-label":"Open stash drawer"}});(0,n.setIcon)(e,"menu"),e.addEventListener("click",()=>this.toggleDrawer());let s=t.createEl("div",{cls:"scratchpad-header-controls"}),a=s.createEl("button",{cls:"scratchpad-jump-button",attr:{"aria-label":"Jump to top"}});(0,n.setIcon)(a,"chevron-up"),a.addEventListener("click",()=>this.jumpToTop());let i=s.createEl("button",{cls:"scratchpad-jump-button",attr:{"aria-label":"Jump to bottom"}});(0,n.setIcon)(i,"chevron-down"),i.addEventListener("click",()=>this.jumpToBottom())}setupTextarea(){this.textarea=this.contentEl.createEl("textarea",{cls:"scratchpad-textarea",attr:{placeholder:"Quick notes here..."}}),this.debouncedSaveTextSnapshot=(0,n.debounce)(()=>{this.isTyping||(this.isTyping=!0,this.saveTextSnapshot(),this.isTyping=!1)},600,!0),this.debouncedAutoSave=(0,n.debounce)(()=>{this.saveContentToPlugin()},500,!0),this.textarea.addEventListener("input",()=>{this.debouncedSaveTextSnapshot(),this.debouncedAutoSave(),this.updateFooterStats()}),this.textarea.addEventListener("select",()=>{this.updateFooterStats()}),this.textarea.addEventListener("keyup",()=>{this.updateFooterStats()})}setupActionButtons(){let t=this.contentEl.createEl("div",{cls:"scratchpad-footer"}),e=t.createEl("div",{cls:"scratchpad-stats"}),s=t.createEl("div",{cls:"scratchpad-buttons-container"}),a=s.createEl("button",{cls:"scratchpad-copy-button",attr:{"aria-label":"Copy to clipboard"}});(0,n.setIcon)(a,"clipboard"),a.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(this.textarea.value),new n.Notice("Copied to clipboard")}catch(l){new n.Notice("Failed to copy to clipboard")}});let i=s.createEl("button",{cls:"scratchpad-new-button",attr:{"aria-label":"New stash"}});(0,n.setIcon)(i,"plus"),i.addEventListener("click",async()=>{await this.createNewStash()});let r=s.createEl("button",{cls:"scratchpad-clear-button",attr:{"aria-label":"Clear"}});(0,n.setIcon)(r,"eraser"),r.addEventListener("click",async()=>{this.textarea.value.trim()&&!confirm("Are you sure you want to clear all content?")||(this.textarea.value="",this.textHistory=[""],this.textIndex=0,await this.saveContentToPlugin(),this.updateFooterStats())}),this.contentEl.appendChild(t),this.statsContainer=e}setupStashDrawer(){this.stashDrawer=this.contentEl.createEl("div",{cls:"scratchpad-stash-drawer"});let t=this.stashDrawer.createEl("div",{cls:"stash-drawer-header"}),e=t.createEl("div",{cls:"stash-drawer-header-top"});e.createEl("div",{cls:"stash-drawer-title",text:"STASHED"}).setAttribute("data-role","drawer-title");let a=e.createEl("button",{cls:"stash-drawer-close"});(0,n.setIcon)(a,"x"),a.addEventListener("click",()=>this.toggleDrawer());let r=t.createEl("div",{cls:"stash-drawer-header-bottom"}).createEl("button",{cls:"stash-clear-all-button"});(0,n.setIcon)(r,"trash-2"),r.textContent=" Clear All Stashes",r.addEventListener("click",()=>this.clearAllStashes()),this.stashDrawerContent=this.stashDrawer.createEl("div",{cls:"stash-drawer-content"}),this.stashDrawerContent.addEventListener("scroll",()=>{let{scrollTop:l,scrollHeight:v,clientHeight:f}=this.stashDrawerContent;l+f>=v-100&&this.loadMoreStashes()})}async toggleDrawer(){this.isDrawerOpen=!this.isDrawerOpen,this.isDrawerOpen?(this.stashDrawer.addClass("open"),await this.loadStashes()):this.stashDrawer.removeClass("open")}async loadStashes(){if(!this.isLoadingStashes){this.isLoadingStashes=!0;try{this.loadedStashes=await this.plugin.getStashes(10,0),this.stashOffset=this.loadedStashes.length,this.renderStashes()}finally{this.isLoadingStashes=!1}}}async loadMoreStashes(){if(!this.isLoadingStashes){this.isLoadingStashes=!0;try{let t=await this.plugin.getStashes(10,this.stashOffset);this.loadedStashes.push(...t),this.stashOffset=this.loadedStashes.length,this.renderStashes()}finally{this.isLoadingStashes=!1}}}renderStashes(){if(this.stashDrawerContent.empty(),this.loadedStashes.length===0){this.stashDrawerContent.createEl("div",{cls:"stash-empty-state",text:"No stashed notes yet"});return}this.loadedStashes.forEach(t=>{let e=this.stashDrawerContent.createEl("div",{cls:"stash-card"});e.createEl("div",{cls:"stash-preview",text:t.preview});let s=e.createEl("div",{cls:"stash-meta"});s.createEl("div",{cls:"stash-date",text:this.formatDate(t.updatedAt)});let a=s.createEl("button",{cls:"stash-menu-button"});(0,n.setIcon)(a,"more-horizontal"),e.addEventListener("click",i=>{i.target===a||a.contains(i.target)||this.fetchStash(t.id)}),a.addEventListener("click",i=>{i.stopPropagation(),this.showStashMenu(t,a)})})}showStashMenu(t,e){let s=new n.Menu;s.addItem(i=>{i.setTitle("Fetch"),i.setIcon("download"),i.onClick(()=>this.fetchStash(t.id))}),s.addItem(i=>{i.setTitle("Copy"),i.setIcon("copy"),i.onClick(()=>{navigator.clipboard.writeText(t.content),new n.Notice("Copied to clipboard")})}),s.addItem(i=>{i.setTitle("Trash"),i.setIcon("trash"),i.onClick(()=>this.deleteStash(t.id))});let a=e.getBoundingClientRect();s.showAtPosition({x:a.right,y:a.top})}formatDate(t){let e=new Date,s=new Date(t),a=new Date(e.getFullYear(),e.getMonth(),e.getDate()),i=new Date(a.getTime()-24*60*60*1e3),r=new Date(s.getFullYear(),s.getMonth(),s.getDate()),l=s.toLocaleTimeString([],{hour:"numeric",minute:"2-digit"});return r.getTime()===a.getTime()?`Today ${l}`:r.getTime()===i.getTime()?`Yesterday ${l}`:s.toLocaleDateString([],{month:"short",day:"numeric"})}async fetchStash(t){if(!this.isLoadingStashes)try{let e=await this.plugin.fetchStash(t);if(!e)return;let s=this.textarea.value.trim();if(s&&s!==e.content&&this.plugin.settings.autoStashOnFetch)try{await this.plugin.stashContent(s),new n.Notice("Current content stashed")}catch(a){new n.Notice("Failed to stash current content");return}this.currentStash=e,this.textarea.value=e.content,this.textHistory=[e.content],this.textIndex=0,this.updateFooterStats(),this.toggleDrawer(),s&&s!==e.content&&this.plugin.settings.autoStashOnFetch&&this.isDrawerOpen&&this.loadStashes(),new n.Notice("Stash loaded")}catch(e){new n.Notice("Failed to load stash")}}async deleteStash(t){if(!this.isLoadingStashes)try{await this.plugin.deleteStash(t),this.loadedStashes=this.loadedStashes.filter(e=>e.id!==t),this.renderStashes(),this.updateFooterStats(),new n.Notice("Stash deleted")}catch(e){new n.Notice("Failed to delete stash")}}async createNewStash(){let t=this.textarea.value;try{let e=await this.plugin.createNewStash(t);e?(this.currentStash=e,this.textarea.value="",this.textHistory=[""],this.textIndex=0,this.updateFooterStats(),this.isDrawerOpen&&this.loadStashes(),new n.Notice("Note stashed")):new n.Notice("Cannot stash empty note")}catch(e){new n.Notice(e.message||"Failed to create stash")}}saveTextSnapshot(){let t=this.textarea.value;if(this.textIndex<0||t!==this.textHistory[this.textIndex]){this.textIndex<this.textHistory.length-1&&(this.textHistory=this.textHistory.slice(0,this.textIndex+1)),this.textHistory.push(t),this.textIndex=this.textHistory.length-1;let e=50;this.textHistory.length>e&&(this.textHistory.shift(),this.textIndex--)}}undoText(){this.textIndex<=0||(this.textIndex--,this.textarea.value=this.textHistory[this.textIndex])}redoText(){this.textIndex>=this.textHistory.length-1||(this.textIndex++,this.textarea.value=this.textHistory[this.textIndex])}handleUndo(t){t.preventDefault(),this.undoText()}handleRedo(t){t.preventDefault(),this.redoText()}async saveContentToPlugin(){let t=this.textarea.value;await this.plugin.saveScratchpadContent(t)}async loadContentFromPlugin(){let t=await this.plugin.loadScratchpadContent();t.currentStash?(this.currentStash=t.currentStash,this.textarea.value=t.currentStash.content,this.textHistory=[t.currentStash.content],this.textIndex=0):(this.textarea.value="",this.textHistory=[""],this.textIndex=0),setTimeout(()=>this.updateFooterStats(),100)}jumpToTop(){this.textarea.setSelectionRange(0,0),this.textarea.scrollTop=0,this.textarea.focus()}jumpToBottom(){let t=this.textarea.value.length;this.textarea.setSelectionRange(t,t),this.textarea.scrollTop=this.textarea.scrollHeight,this.textarea.focus()}updateFooterStats(){if(!this.statsContainer)return;let t=this.textarea.value,e=this.textarea.selectionStart,s=this.textarea.selectionEnd,a=e!==s,i=[];if(a){let l=t.substring(e,s).split(`
`).length;i.push(`Selected: ${l} lines`)}if(this.plugin.settings.showWordCount){let r=t.trim()?t.trim().split(/\s+/).length:0;i.push(`${r} words`)}if(this.plugin.settings.showCharCount&&i.push(`${t.length} chars`),this.plugin.settings.showLineCount){let r=t?t.split(`
`).length:1;i.push(`${r} lines`)}this.statsContainer.textContent=i.join(" \u2022 ")}async clearAllStashes(){if(confirm("Are you sure you want to clear ALL stashed notes? This action cannot be undone."))try{await this.plugin.clearAllStashes(),this.loadedStashes=[],this.stashOffset=0,this.renderStashes(),new n.Notice("All stashes cleared")}catch(e){new n.Notice("Failed to clear stashes")}}};var d="history.json",b={maxStashes:20,autoEvictOldest:!0,maxNoteLength:5e4,showWordCount:!0,showCharCount:!0,showLineCount:!0,autoStashOnFetch:!0},g=class extends h.Plugin{async onload(){await this.loadSettings(),this.registerView(u,t=>new p(t,this)),this.addRibbonIcon("notebook-pen","Open scratchpad",()=>{this.toggleView()}),this.addCommand({id:"open-scratchpad-enhanced-view",name:"Open scratchpad",callback:()=>this.activateView()}),this.addSettingTab(new S(this.app,this))}async loadSettings(){this.settings=Object.assign({},b,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async saveScratchpadContent(t){let e=await this.loadScratchpadContent();e.currentStash?(e.currentStash.content=t,e.currentStash.updatedAt=Date.now(),e.currentStash.preview=this.generatePreview(t)):e.currentStash={id:this.generateId(),createdAt:Date.now(),updatedAt:Date.now(),preview:this.generatePreview(t),content:t};let s=this.manifest.dir+"/"+d;await this.app.vault.adapter.write(s,JSON.stringify(e,null,2))}async loadScratchpadContent(){let t=this.manifest.dir+"/"+d;if(await this.app.vault.adapter.exists(t)){let e=await this.app.vault.adapter.read(t);try{let s=JSON.parse(e);if(s.text!==void 0){let a={currentStash:{id:this.generateId(),createdAt:Date.now(),updatedAt:Date.now(),preview:this.generatePreview(s.text),content:s.text},stashes:[]};return await this.app.vault.adapter.write(t,JSON.stringify(a,null,2)),a}return s}catch(s){return{stashes:[]}}}return{stashes:[]}}async createNewStash(t=""){if(!t.trim())return null;if(t.length>this.settings.maxNoteLength)throw new Error(`Note exceeds maximum length of ${this.settings.maxNoteLength} characters`);let e=await this.loadScratchpadContent();if(e.currentStash&&e.currentStash.content.trim()&&(e.stashes=e.stashes.filter(i=>{var r;return i.id!==((r=e.currentStash)==null?void 0:r.id)}),e.stashes.unshift(e.currentStash),e.stashes.length>this.settings.maxStashes))if(this.settings.autoEvictOldest)e.stashes=e.stashes.slice(0,this.settings.maxStashes);else throw new Error(`Maximum number of stashes (${this.settings.maxStashes}) reached`);let s={id:this.generateId(),createdAt:Date.now(),updatedAt:Date.now(),preview:this.generatePreview(t),content:t};e.currentStash=s;let a=this.manifest.dir+"/"+d;return await this.app.vault.adapter.write(a,JSON.stringify(e,null,2)),s}async stashContent(t){if(!t.trim())return null;if(t.length>this.settings.maxNoteLength)throw new Error(`Note exceeds maximum length of ${this.settings.maxNoteLength} characters`);let e=await this.loadScratchpadContent(),s={id:this.generateId(),createdAt:Date.now(),updatedAt:Date.now(),preview:this.generatePreview(t),content:t};if(e.stashes.unshift(s),e.stashes.length>this.settings.maxStashes)if(this.settings.autoEvictOldest)e.stashes=e.stashes.slice(0,this.settings.maxStashes);else throw new Error(`Maximum number of stashes (${this.settings.maxStashes}) reached`);let a=this.manifest.dir+"/"+d;return await this.app.vault.adapter.write(a,JSON.stringify(e,null,2)),s}async fetchStash(t){let e=await this.loadScratchpadContent();if(e.currentStash&&e.currentStash.id===t)return e.currentStash;let s=e.stashes.find(a=>a.id===t);if(s){e.currentStash={...s,updatedAt:Date.now()},e.stashes=e.stashes.filter(i=>i.id!==t);let a=this.manifest.dir+"/"+d;return await this.app.vault.adapter.write(a,JSON.stringify(e,null,2)),e.currentStash}return null}async deleteStash(t){let e=await this.loadScratchpadContent();e.currentStash&&e.currentStash.id===t?e.currentStash=void 0:e.stashes=e.stashes.filter(a=>a.id!==t);let s=this.manifest.dir+"/"+d;await this.app.vault.adapter.write(s,JSON.stringify(e,null,2))}async clearAllStashes(){let t=await this.loadScratchpadContent();t.stashes=[];let e=this.manifest.dir+"/"+d;await this.app.vault.adapter.write(e,JSON.stringify(t,null,2))}async getStashes(t=10,e=0){return[...(await this.loadScratchpadContent()).stashes].sort((i,r)=>r.updatedAt-i.updatedAt).slice(e,e+t)}generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}generatePreview(t){return t.trim().slice(0,100).replace(/\n/g," ")||"Empty note"}async activateView(){var a;let t=this.app.workspace,e=t.getLeavesOfType(u)[0];if(e){t.revealLeaf(e);return}let s=(a=t.getRightLeaf(!1))!=null?a:t.getLeaf(!0);await s.setViewState({type:u,active:!0}),t.revealLeaf(s)}async toggleView(){let t=this.app.workspace,e=t.getLeavesOfType(u);if(e.length===0){await this.activateView();return}let s=e[0],a=t.getActiveViewOfType(p);if(a&&a.leaf===s){let i=t.getLeaf(!1);i&&i!==s?t.setActiveLeaf(i,{focus:!0}):s.view.containerEl.blur()}else t.revealLeaf(s)}},S=class extends h.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Scratchpad Settings"}),new h.Setting(t).setName("Maximum stashes").setDesc("Maximum number of stashes to keep").addText(e=>e.setPlaceholder("20").setValue(this.plugin.settings.maxStashes.toString()).onChange(async s=>{let a=parseInt(s);!isNaN(a)&&a>0&&(this.plugin.settings.maxStashes=a,await this.plugin.saveSettings())})),new h.Setting(t).setName("Auto-evict oldest stashes").setDesc("Automatically remove the oldest stash when the maximum is reached").addToggle(e=>e.setValue(this.plugin.settings.autoEvictOldest).onChange(async s=>{this.plugin.settings.autoEvictOldest=s,await this.plugin.saveSettings()})),new h.Setting(t).setName("Maximum note length").setDesc("Maximum number of characters allowed per note").addText(e=>e.setPlaceholder("50000").setValue(this.plugin.settings.maxNoteLength.toString()).onChange(async s=>{let a=parseInt(s);!isNaN(a)&&a>0&&(this.plugin.settings.maxNoteLength=a,await this.plugin.saveSettings())})),new h.Setting(t).setName("Show word count").setDesc("Display word count in footer").addToggle(e=>e.setValue(this.plugin.settings.showWordCount).onChange(async s=>{this.plugin.settings.showWordCount=s,await this.plugin.saveSettings()})),new h.Setting(t).setName("Show character count").setDesc("Display character count in footer").addToggle(e=>e.setValue(this.plugin.settings.showCharCount).onChange(async s=>{this.plugin.settings.showCharCount=s,await this.plugin.saveSettings()})),new h.Setting(t).setName("Show line count").setDesc("Display line count in footer").addToggle(e=>e.setValue(this.plugin.settings.showLineCount).onChange(async s=>{this.plugin.settings.showLineCount=s,await this.plugin.saveSettings()})),new h.Setting(t).setName("Auto-stash on fetch").setDesc("Automatically stash current content when fetching a different stash (instead of showing confirmation dialog)").addToggle(e=>e.setValue(this.plugin.settings.autoStashOnFetch).onChange(async s=>{this.plugin.settings.autoStashOnFetch=s,await this.plugin.saveSettings()}))}};
